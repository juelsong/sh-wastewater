// <auto-generated />
using System;
using ESys.Db.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ESys.Db.PostgreSQL.TenantSlave
{
    [DbContext(typeof(TenantSlaveDbContext))]
    [Migration("20250606024907_v0.0.2")]
    partial class v002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ESys.Infrastructure.Entity.DeviceState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RunState")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("WorkmanipId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("WorkmanipId");

                    b.ToTable("DeviceState");
                });

            modelBuilder.Entity("ESys.Infrastructure.Entity.Workmanip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Workmanip");
                });

            modelBuilder.Entity("ESys.Infrastructure.Entity.WorkmanipData1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BioChemicalPoolAerationFan1")
                        .HasColumnType("integer");

                    b.Property<int?>("BioChemicalPoolAerationFan2")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("DischargePump1")
                        .HasColumnType("integer");

                    b.Property<int?>("DischargePump2")
                        .HasColumnType("integer");

                    b.Property<int?>("DisinfectantMeteringPump1")
                        .HasColumnType("integer");

                    b.Property<int?>("DisinfectantMeteringPump2")
                        .HasColumnType("integer");

                    b.Property<int?>("DisinfectionBlenderOperation")
                        .HasColumnType("integer");

                    b.Property<bool?>("DisinfectionPoolHighLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool?>("DisinfectionPoolLowLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool?>("DisinfectionPoolMiddleLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<double?>("DrugDosage")
                        .HasColumnType("double precision");

                    b.Property<double?>("OutletPoolFlow")
                        .HasColumnType("double precision");

                    b.Property<double?>("OutletPoolLiquidLevel")
                        .HasColumnType("double precision");

                    b.Property<double?>("OutletPoolResidualChlorine")
                        .HasColumnType("double precision");

                    b.Property<bool?>("RegulationPoolHighLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<int?>("RegulationPoolLiftPump1")
                        .HasColumnType("integer");

                    b.Property<int?>("RegulationPoolLiftPump2")
                        .HasColumnType("integer");

                    b.Property<double?>("RegulationPoolLiquidLevel")
                        .HasColumnType("double precision");

                    b.Property<bool?>("RegulationPoolLowLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool?>("RegulationPoolMiddleLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<int?>("SludgePoolFeedPump")
                        .HasColumnType("integer");

                    b.Property<bool?>("SludgePoolHighLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<double?>("SludgePoolLiquidLevel")
                        .HasColumnType("double precision");

                    b.Property<bool?>("SludgePoolLowLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool?>("SludgePoolMiddleLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<int?>("SludgeReturnPump1")
                        .HasColumnType("integer");

                    b.Property<int?>("SludgeReturnPump2")
                        .HasColumnType("integer");

                    b.Property<int?>("StirringAerationFan")
                        .HasColumnType("integer");

                    b.Property<int?>("SumpSubmersiblePump1")
                        .HasColumnType("integer");

                    b.Property<int?>("SumpSubmersiblePump2")
                        .HasColumnType("integer");

                    b.Property<int?>("TestValue")
                        .HasColumnType("integer");

                    b.Property<int>("WorkmanipId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Date");

                    b.HasIndex("WorkmanipId");

                    b.ToTable("WorkmanipData1");
                });

            modelBuilder.Entity("ESys.Security.Entity.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("Name");

                    b.HasIndex("ParentId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("ESys.Security.Entity.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("ESys.Security.Entity.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("DepartFormatter")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("ParentId");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "system",
                            Description = "系统管理",
                            Order = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "region",
                            Description = "区域",
                            Order = 2,
                            ParentId = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "Classification:Add",
                            Description = "添加洁净级别",
                            Order = 3,
                            ParentId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 4,
                            Code = "Classification:Edit",
                            Description = "编辑洁净级别",
                            Order = 4,
                            ParentId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            Code = "Classification:Disable",
                            Description = "禁用洁净级别",
                            Order = 5,
                            ParentId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 6,
                            Code = "SiteType:Add",
                            Description = "添加采样点类型",
                            Order = 6,
                            ParentId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 7,
                            Code = "SiteType:Edit",
                            Description = "编辑采样点类型",
                            Order = 7,
                            ParentId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 8,
                            Code = "SiteType:Disable",
                            Description = "禁用采样点类型",
                            Order = 8,
                            ParentId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 9,
                            Code = "LocationType:Add",
                            Description = "添加区域类型",
                            Order = 9,
                            ParentId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 10,
                            Code = "LocationType:Edit",
                            Description = "编辑区域类型",
                            Order = 10,
                            ParentId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 11,
                            Code = "LocationType:Disable",
                            Description = "禁用区域类型",
                            Order = 11,
                            ParentId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 12,
                            Code = "Location:Add",
                            Description = "添加区域",
                            Order = 12,
                            ParentId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 13,
                            Code = "Location:Edit",
                            Description = "编辑区域",
                            Order = 13,
                            ParentId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 14,
                            Code = "Location:Disable",
                            Description = "禁用区域",
                            Order = 14,
                            ParentId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 15,
                            Code = "production",
                            Description = "产品",
                            Order = 15,
                            ParentId = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 16,
                            Code = "Product:Add",
                            Description = "添加产品",
                            Order = 16,
                            ParentId = 15,
                            Type = 2
                        },
                        new
                        {
                            Id = 17,
                            Code = "Product:Edit",
                            Description = "编辑产品",
                            Order = 17,
                            ParentId = 15,
                            Type = 2
                        },
                        new
                        {
                            Id = 18,
                            Code = "Product:Disable",
                            Description = "禁用产品",
                            Order = 18,
                            ParentId = 15,
                            Type = 2
                        },
                        new
                        {
                            Id = 19,
                            Code = "testMethod",
                            Description = "测试方法",
                            Order = 19,
                            ParentId = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 20,
                            Code = "TestMethod:Add",
                            Description = "添加测试方法",
                            Order = 20,
                            ParentId = 19,
                            Type = 2
                        },
                        new
                        {
                            Id = 21,
                            Code = "TestMethod:Edit",
                            Description = "编辑测试方法",
                            Order = 21,
                            ParentId = 19,
                            Type = 2
                        },
                        new
                        {
                            Id = 22,
                            Code = "TestMethod:Disable",
                            Description = "禁用测试方法",
                            Order = 22,
                            ParentId = 19,
                            Type = 2
                        },
                        new
                        {
                            Id = 23,
                            Code = "device",
                            Description = "设备",
                            Order = 23,
                            ParentId = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 24,
                            Code = "Equipment:Add",
                            Description = "添加设备",
                            Order = 24,
                            ParentId = 23,
                            Type = 2
                        },
                        new
                        {
                            Id = 25,
                            Code = "Equipment:Edit",
                            Description = "编辑设备",
                            Order = 25,
                            ParentId = 23,
                            Type = 2
                        },
                        new
                        {
                            Id = 26,
                            Code = "Equipment:Disable",
                            Description = "禁用设备",
                            Order = 26,
                            ParentId = 23,
                            Type = 2
                        },
                        new
                        {
                            Id = 27,
                            Code = "Equipment:UpdateConfig",
                            Description = "上传文件",
                            Order = 27,
                            ParentId = 23,
                            Type = 2
                        },
                        new
                        {
                            Id = 28,
                            Code = "medium",
                            Description = "培养基",
                            Order = 28,
                            ParentId = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 29,
                            Code = "Media:Add",
                            Description = "添加培养基",
                            Order = 29,
                            ParentId = 28,
                            Type = 2
                        },
                        new
                        {
                            Id = 30,
                            Code = "Media:Edit",
                            Description = "编辑培养基",
                            Order = 30,
                            ParentId = 28,
                            Type = 2
                        },
                        new
                        {
                            Id = 31,
                            Code = "Media:Disable",
                            Description = "禁用培养基",
                            Order = 31,
                            ParentId = 28,
                            Type = 2
                        },
                        new
                        {
                            Id = 32,
                            Code = "microorganism",
                            Description = "微生物",
                            Order = 32,
                            ParentId = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 33,
                            Code = "Organism:Add",
                            Description = "添加微生物",
                            Order = 33,
                            ParentId = 32,
                            Type = 2
                        },
                        new
                        {
                            Id = 34,
                            Code = "Organism:Edit",
                            Description = "编辑微生物",
                            Order = 34,
                            ParentId = 32,
                            Type = 2
                        },
                        new
                        {
                            Id = 35,
                            Code = "Organism:Disable",
                            Description = "禁用微生物",
                            Order = 35,
                            ParentId = 32,
                            Type = 2
                        },
                        new
                        {
                            Id = 36,
                            Code = "security",
                            Description = "安全",
                            Order = 36,
                            ParentId = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 37,
                            Code = "department",
                            Description = "部门管理",
                            Order = 37,
                            ParentId = 36,
                            Type = 1
                        },
                        new
                        {
                            Id = 38,
                            Code = "Department:Add",
                            Description = "添加部门",
                            Order = 38,
                            ParentId = 37,
                            Type = 2
                        },
                        new
                        {
                            Id = 39,
                            Code = "Department:Edit",
                            Description = "编辑部门",
                            Order = 39,
                            ParentId = 37,
                            Type = 2
                        },
                        new
                        {
                            Id = 40,
                            Code = "Department:Disable",
                            Description = "禁用部门",
                            Order = 40,
                            ParentId = 37,
                            Type = 2
                        },
                        new
                        {
                            Id = 41,
                            Code = "user",
                            Description = "用户管理",
                            Order = 41,
                            ParentId = 36,
                            Type = 1
                        },
                        new
                        {
                            Id = 42,
                            Code = "User:Add",
                            Description = "添加用户",
                            Order = 42,
                            ParentId = 41,
                            Type = 2
                        },
                        new
                        {
                            Id = 43,
                            Code = "User:Edit",
                            Description = "编辑用户",
                            Order = 43,
                            ParentId = 41,
                            Type = 2
                        },
                        new
                        {
                            Id = 44,
                            Code = "User:Disable",
                            Description = "禁用用户",
                            Order = 44,
                            ParentId = 41,
                            Type = 2
                        },
                        new
                        {
                            Id = 45,
                            Code = "User:Password",
                            Description = "修改密码",
                            Order = 45,
                            ParentId = 41,
                            Type = 2
                        },
                        new
                        {
                            Id = 46,
                            Code = "role",
                            Description = "角色管理",
                            Order = 46,
                            ParentId = 36,
                            Type = 1
                        },
                        new
                        {
                            Id = 47,
                            Code = "Role:Add",
                            Description = "添加角色",
                            Order = 47,
                            ParentId = 46,
                            Type = 2
                        },
                        new
                        {
                            Id = 48,
                            Code = "Role:Edit",
                            Description = "编辑角色",
                            Order = 48,
                            ParentId = 46,
                            Type = 2
                        },
                        new
                        {
                            Id = 49,
                            Code = "Role:Disable",
                            Description = "禁用角色",
                            Order = 49,
                            ParentId = 46,
                            Type = 2
                        },
                        new
                        {
                            Id = 50,
                            Code = "booking",
                            Description = "预订管理",
                            Order = 50,
                            ParentId = 36,
                            Type = 1
                        },
                        new
                        {
                            Id = 51,
                            Code = "Subscription:Edit",
                            Description = "编辑警告订阅",
                            Order = 51,
                            ParentId = 50,
                            Type = 2
                        },
                        new
                        {
                            Id = 52,
                            Code = "Subscription:Disable",
                            Description = "禁用警告订阅",
                            Order = 52,
                            ParentId = 50,
                            Type = 2
                        },
                        new
                        {
                            Id = 53,
                            Code = "settings",
                            Description = "系统设置",
                            Order = 53,
                            ParentId = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 54,
                            Code = "Security:Password",
                            Description = "配置密码",
                            Order = 54,
                            ParentId = 53,
                            Type = 1
                        },
                        new
                        {
                            Id = 55,
                            Code = "Security:Email",
                            Description = "配置邮箱",
                            Order = 55,
                            ParentId = 53,
                            Type = 1
                        },
                        new
                        {
                            Id = 56,
                            Code = "auditRecord",
                            Description = "审计追踪",
                            Order = 56,
                            ParentId = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 57,
                            Code = "log",
                            Description = "日志",
                            Order = 57,
                            ParentId = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 58,
                            Code = "visualization",
                            Description = "可视化",
                            Order = 58,
                            Type = 1
                        },
                        new
                        {
                            Id = 59,
                            Code = "map",
                            Description = "地图管理",
                            Order = 59,
                            ParentId = 58,
                            Type = 1
                        },
                        new
                        {
                            Id = 60,
                            Code = "Map:Add",
                            Description = "添加地图",
                            Order = 60,
                            ParentId = 59,
                            Type = 2
                        },
                        new
                        {
                            Id = 61,
                            Code = "Map:Disable",
                            Description = "禁用地图",
                            Order = 61,
                            ParentId = 59,
                            Type = 2
                        },
                        new
                        {
                            Id = 62,
                            Code = "Map:Edit",
                            Description = "编辑地图",
                            Order = 62,
                            ParentId = 59,
                            Type = 2
                        },
                        new
                        {
                            Id = 63,
                            Code = "MapCategory:Add",
                            Description = "添加地图分类",
                            Order = 63,
                            ParentId = 59,
                            Type = 2
                        },
                        new
                        {
                            Id = 64,
                            Code = "MapCategory:Disable",
                            Description = "禁用地图分类",
                            Order = 64,
                            ParentId = 59,
                            Type = 2
                        },
                        new
                        {
                            Id = 65,
                            Code = "MapCategory:Edit",
                            Description = "编辑地图分类",
                            Order = 65,
                            ParentId = 59,
                            Type = 2
                        },
                        new
                        {
                            Id = 66,
                            Code = "visualizations",
                            Description = "可视化呈现",
                            Order = 66,
                            ParentId = 58,
                            Type = 1
                        },
                        new
                        {
                            Id = 67,
                            Code = "inspectionExecution",
                            Description = "检验执行",
                            Order = 67,
                            Type = 1
                        },
                        new
                        {
                            Id = 68,
                            Code = "missions",
                            Description = "任务管理",
                            Order = 68,
                            ParentId = 67,
                            Type = 1
                        },
                        new
                        {
                            Id = 69,
                            Code = "Missions:Receive",
                            Description = "任务管理领取",
                            Order = 69,
                            ParentId = 68,
                            Type = 2
                        },
                        new
                        {
                            Id = 70,
                            Code = "Missions:Assign",
                            Description = "任务管理分配",
                            Order = 70,
                            ParentId = 68,
                            Type = 2
                        },
                        new
                        {
                            Id = 71,
                            Code = "Missions:Copy",
                            Description = "任务管理复制",
                            Order = 71,
                            ParentId = 68,
                            Type = 2
                        },
                        new
                        {
                            Id = 72,
                            Code = "Missions:Return",
                            Description = "任务管理退回",
                            Order = 72,
                            ParentId = 68,
                            Type = 2
                        },
                        new
                        {
                            Id = 73,
                            Code = "Missions:Execute",
                            Description = "任务管理执行",
                            Order = 73,
                            ParentId = 68,
                            Type = 2
                        },
                        new
                        {
                            Id = 74,
                            Code = "Missions:NoTest",
                            Description = "任务管理无需测试",
                            Order = 74,
                            ParentId = 68,
                            Type = 2
                        },
                        new
                        {
                            Id = 75,
                            Code = "Missions:Calender",
                            Description = "任务日历",
                            Order = 75,
                            ParentId = 68,
                            Type = 1
                        },
                        new
                        {
                            Id = 76,
                            Code = "Missions:Printer",
                            Description = "任务条码打印",
                            Order = 76,
                            ParentId = 68,
                            Type = 2
                        },
                        new
                        {
                            Id = 77,
                            Code = "inspectionRecord",
                            Description = "结果录入",
                            Order = 77,
                            ParentId = 67,
                            Type = 1
                        },
                        new
                        {
                            Id = 78,
                            Code = "InspectionRecord:Sampling",
                            Description = "采样",
                            Order = 78,
                            ParentId = 77,
                            Type = 1
                        },
                        new
                        {
                            Id = 79,
                            Code = "InspectionRecord:Incubation",
                            Description = "孵化",
                            Order = 79,
                            ParentId = 77,
                            Type = 1
                        },
                        new
                        {
                            Id = 80,
                            Code = "InspectionRecord:Testing",
                            Description = "测试",
                            Order = 80,
                            ParentId = 77,
                            Type = 1
                        },
                        new
                        {
                            Id = 81,
                            Code = "InspectionRecord:ResultEntry",
                            Description = "录入",
                            Order = 81,
                            ParentId = 77,
                            Type = 1
                        },
                        new
                        {
                            Id = 82,
                            Code = "InspectionRecord:EditDeviceImport",
                            Description = "编辑设备导入数据",
                            Order = 82,
                            ParentId = 77,
                            Type = 1
                        },
                        new
                        {
                            Id = 83,
                            Code = "InspectionRecord:Notest",
                            Description = "结果录入无需测试",
                            Order = 83,
                            ParentId = 77,
                            Type = 1
                        },
                        new
                        {
                            Id = 84,
                            Code = "auditPrompt",
                            Description = "审核批准",
                            Order = 84,
                            Type = 1
                        },
                        new
                        {
                            Id = 85,
                            Code = "AuditPrompt:ReTest",
                            Description = "审核批准再测试",
                            Order = 85,
                            ParentId = 84,
                            Type = 2
                        },
                        new
                        {
                            Id = 86,
                            Code = "AuditPrompt:Notest",
                            Description = "审核批准无需测试",
                            Order = 86,
                            ParentId = 84,
                            Type = 1
                        },
                        new
                        {
                            Id = 87,
                            Code = "AuditPrompt:Approve",
                            Description = "批准",
                            Order = 87,
                            ParentId = 84,
                            Type = 2
                        },
                        new
                        {
                            Id = 88,
                            Code = "AuditPrompt:Review",
                            Description = "审核",
                            Order = 88,
                            ParentId = 84,
                            Type = 2
                        },
                        new
                        {
                            Id = 89,
                            Code = "AuditPrompt:Edit",
                            Description = "复核修改数据",
                            Order = 89,
                            ParentId = 84,
                            Type = 2
                        },
                        new
                        {
                            Id = 90,
                            Code = "plan",
                            Description = "检验计划",
                            Order = 90,
                            Type = 1
                        },
                        new
                        {
                            Id = 91,
                            Code = "Plan:Add",
                            Description = "计划添加",
                            Order = 91,
                            ParentId = 90,
                            Type = 2
                        },
                        new
                        {
                            Id = 92,
                            Code = "Plan:Edit",
                            Description = "计划编辑",
                            Order = 92,
                            ParentId = 90,
                            Type = 2
                        },
                        new
                        {
                            Id = 93,
                            Code = "Plan:Approve",
                            Description = "计划批准",
                            Order = 93,
                            ParentId = 90,
                            Type = 2
                        },
                        new
                        {
                            Id = 94,
                            Code = "Plan:Effective",
                            Description = "计划激活",
                            Order = 94,
                            ParentId = 90,
                            Type = 2
                        },
                        new
                        {
                            Id = 95,
                            Code = "Plan:Retire",
                            Description = "计划废弃",
                            Order = 95,
                            ParentId = 90,
                            Type = 2
                        },
                        new
                        {
                            Id = 96,
                            Code = "Plan:AddToPool",
                            Description = "计划添加到任务列表",
                            Order = 96,
                            ParentId = 90,
                            Type = 2
                        },
                        new
                        {
                            Id = 97,
                            Code = "Plan:Calender",
                            Description = "计划日历",
                            Order = 97,
                            ParentId = 90,
                            Type = 1
                        },
                        new
                        {
                            Id = 98,
                            Code = "analyse",
                            Description = "分析报表",
                            Order = 98,
                            Type = 1
                        });
                });

            modelBuilder.Entity("ESys.Security.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = 1,
                            CreatedTime = new DateTimeOffset(new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            IsActive = true,
                            IsHidden = true,
                            Name = "超级管理员"
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = 1,
                            CreatedTime = new DateTimeOffset(new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            IsActive = true,
                            IsHidden = false,
                            Name = "管理员"
                        });
                });

            modelBuilder.Entity("ESys.Security.Entity.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionId = 4,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("ESys.Security.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Account")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("EMail")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int?>("Gender")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("InitialQualificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LastMonitoredDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("LastPasswordModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("NextQualificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("PasswordExpiryPeriod")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("RealName")
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Account")
                        .IsUnique();

                    b.HasIndex("DepartmentId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "super",
                            CreateBy = 1,
                            CreatedTime = new DateTimeOffset(new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            IsActive = true,
                            IsHidden = true,
                            Password = "l8YyUDcfKuGGgLaMKT4E6mg/8ClZOK8tczolqvakrA8=",
                            Salt = "f5ZTUveTZ6szf7wR3qCmvg==",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Account = "ESys_Admin",
                            CreateBy = 1,
                            CreatedTime = new DateTimeOffset(new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            IsActive = true,
                            IsHidden = true,
                            Password = "gIbsDs1b73xjUyptJmm1RjjX8HiJ3ubnt1F/mS6mzio=",
                            Salt = "kCXBD/crXrivLJwcfWEoHQ==",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Account = "Admin",
                            CreateBy = 1,
                            CreatedTime = new DateTimeOffset(new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            IsActive = true,
                            IsHidden = false,
                            Password = "QnVVjchwQROIbFPB7PrnYD3htnV5F4AJrfWnsej4JQk=",
                            RealName = "Admin",
                            Salt = "tJ48HTFvFBHIWRnO8pxLpQ==",
                            Status = 0
                        });
                });

            modelBuilder.Entity("ESys.Security.Entity.UserHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("Logined")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserHistory");
                });

            modelBuilder.Entity("ESys.Security.Entity.UserPasswordHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .HasColumnType("text");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserPasswordHistory");
                });

            modelBuilder.Entity("ESys.Security.Entity.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DashboardConfig")
                        .HasColumnType("text");

                    b.Property<string>("Locale")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("UserSettings")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("ESys.Security.Entity.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            RoleId = 2,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ESys.Security.Entity.UserV", b =>
                {
                    b.Property<int>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("text");

                    b.Property<string>("EMail")
                        .HasColumnType("text");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("text");

                    b.Property<bool>("HasAccess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("boolean");

                    b.Property<string>("LocationBreadcrumb")
                        .HasColumnType("text");

                    b.Property<string>("LocationFullName")
                        .HasColumnType("text");

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("LocationName")
                        .HasColumnType("text");

                    b.Property<string>("RealName")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.ToView("UserV");
                });

            modelBuilder.Entity("ESys.System.Entity.ConfigItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Property")
                        .HasColumnType("text");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ConfigItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Property = "LOCATION_TYPE_WEIGHT_LEVEL_COUNT",
                            Value = "8"
                        });
                });

            modelBuilder.Entity("ESys.System.Entity.ConfigItemAudit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte>("Action")
                        .HasColumnType("smallint");

                    b.Property<DateTimeOffset>("AuditTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Property")
                        .HasColumnType("text");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("ConfigItemAudit");
                });

            modelBuilder.Entity("ESys.Infrastructure.Entity.DeviceState", b =>
                {
                    b.HasOne("ESys.Infrastructure.Entity.Workmanip", "Workmanip")
                        .WithMany("DeviceStates")
                        .HasForeignKey("WorkmanipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workmanip");
                });

            modelBuilder.Entity("ESys.Infrastructure.Entity.WorkmanipData1", b =>
                {
                    b.HasOne("ESys.Infrastructure.Entity.Workmanip", "Workmanip")
                        .WithMany()
                        .HasForeignKey("WorkmanipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workmanip");
                });

            modelBuilder.Entity("ESys.Security.Entity.Department", b =>
                {
                    b.HasOne("ESys.Security.Entity.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("ESys.Security.Entity.Department", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Manager");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ESys.Security.Entity.Permission", b =>
                {
                    b.HasOne("ESys.Security.Entity.Permission", "Parent")
                        .WithMany("SubPermissions")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ESys.Security.Entity.RolePermission", b =>
                {
                    b.HasOne("ESys.Security.Entity.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESys.Security.Entity.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ESys.Security.Entity.User", b =>
                {
                    b.HasOne("ESys.Security.Entity.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ESys.Security.Entity.UserHistory", b =>
                {
                    b.HasOne("ESys.Security.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESys.Security.Entity.UserPasswordHistory", b =>
                {
                    b.HasOne("ESys.Security.Entity.User", "User")
                        .WithMany("UserPasswordHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESys.Security.Entity.UserProfile", b =>
                {
                    b.HasOne("ESys.Security.Entity.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("ESys.Security.Entity.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESys.Security.Entity.UserRole", b =>
                {
                    b.HasOne("ESys.Security.Entity.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESys.Security.Entity.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESys.Infrastructure.Entity.Workmanip", b =>
                {
                    b.Navigation("DeviceStates");
                });

            modelBuilder.Entity("ESys.Security.Entity.Department", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ESys.Security.Entity.Permission", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("SubPermissions");
                });

            modelBuilder.Entity("ESys.Security.Entity.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ESys.Security.Entity.User", b =>
                {
                    b.Navigation("Profile");

                    b.Navigation("UserPasswordHistories");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
